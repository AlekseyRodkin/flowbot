const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY
);

async function forceResetUser() {
  try {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    // –í–∞—à Telegram ID
    const telegramId = 272559647;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data, error } = await supabase
      .from('users')
      .update({
        level: 1,
        onboarding_completed: false,
        updated_at: new Date().toISOString()
      })
      .eq('telegram_id', telegramId)
      .select();

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞:', error);
      return;
    }

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–±—Ä–æ—à–µ–Ω:', data[0]);
    
    // –¢–∞–∫–∂–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–∏–∫ –µ—Å–ª–∏ –µ—Å—Ç—å
    const { data: streakData, error: streakError } = await supabase
      .from('streaks')
      .update({
        current_streak: 0,
        updated_at: new Date().toISOString()
      })
      .eq('user_id', data[0].id)
      .select();

    if (!streakError) {
      console.log('‚úÖ –°—Ç—Ä–∏–∫ —Å–±—Ä–æ—à–µ–Ω:', streakData);
    } else {
      console.log('‚ÑπÔ∏è –°—Ç—Ä–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)');
    }
    
    console.log('\nüéØ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É');
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

forceResetUser();