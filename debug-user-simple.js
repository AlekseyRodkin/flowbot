const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY
);

async function debugUser() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users...\n');
    
    const { data: users, error } = await supabase
      .from('users')
      .select('*')
      .limit(5);

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error);
      return;
    }

    if (users.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –Ω–µ—Ç');
      return;
    }

    console.log('üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ:');
    users.forEach((user, index) => {
      console.log(`\n--- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${index + 1} ---`);
      Object.entries(user).forEach(([key, value]) => {
        console.log(`${key}: ${value}`);
      });
    });

    // –ù–∞–π–¥–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id –µ—Å–ª–∏ –µ—Å—Ç—å
    const { data: specificUser, error: userError } = await supabase
      .from('users')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(1);

    if (!userError && specificUser.length > 0) {
      console.log('\nüîç –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
      const user = specificUser[0];
      console.log(`ID: ${user.id}`);
      console.log(`Telegram ID: ${user.telegram_id}`);
      console.log(`Username: ${user.username}`);
      console.log(`Level: ${user.level}`);
      console.log(`Onboarding: ${user.onboarding_completed}`);
      console.log(`Created: ${user.created_at}`);
      console.log(`Updated: ${user.updated_at}`);
    }

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

debugUser();