// src/services/aiService.js
const OpenAI = require('openai');

class AIService {
  constructor() {
    this.openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY
    });
  }

  // –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–ø–∏—Å–∫–∏)
  async generateTasks(taskConfig, user) {
    const startTime = Date.now();
    console.log(`üìã –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è ${user.level}: ${taskConfig.easy}E + ${taskConfig.standard}S + ${taskConfig.hard}H + 1M`);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ —Å —É–º–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –≤—ã–±–æ—Ä–∞
    const tasks = this.getStaticTasks(taskConfig, user);
    
    const processingTime = Date.now() - startTime;
    console.log(`‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${processingTime}ms: –ø–æ–ª—É—á–µ–Ω–æ ${tasks.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á`);
    
    return tasks;
  }

  // –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á
  buildTaskPrompt(taskConfig, user) {
    const { easy, standard, hard } = taskConfig;
    
    let prompt = `–°–æ–∑–¥–∞–π –£–ù–ò–ö–ê–õ–¨–ù–´–ô –∏ –†–ê–ó–ù–û–û–ë–†–ê–ó–ù–´–ô —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è —Ç–µ—Ö–Ω–∏–∫–∏ Flow List.

–ö–æ–Ω—Ç–µ–∫—Å—Ç:
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –¥–Ω–µ ${user.level} –∏–∑ 30-–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
- –£—Ä–æ–≤–µ–Ω—å: ${user.level <= 5 ? '–ù–∞—á–∏–Ω–∞—é—â–∏–π (—Ä–∞–∑–≥–æ–Ω)' : user.level <= 10 ? '–°—Ä–µ–¥–Ω–∏–π (—É—Å–ª–æ–∂–Ω–µ–Ω–∏–µ)' : '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π (–ø–æ—Ç–æ–∫)'}

–°–¢–†–û–ì–ò–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
1. –ö–ê–ñ–î–ê–Ø –∑–∞–¥–∞—á–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –£–ù–ò–ö–ê–õ–¨–ù–û–ô - –Ω–∏–∫–∞–∫–∏—Ö –ø–æ–≤—Ç–æ—Ä–æ–≤!
2. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –†–ê–ó–ù–û–û–ë–†–ê–ó–ò–ï - —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ, –º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
3. –ó–∞–¥–∞—á–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ö–û–ù–ö–†–ï–¢–ù–´–ú–ò –∏ –í–´–ü–û–õ–ù–ò–ú–´–ú–ò
4. –ò–∑–±–µ–≥–∞–π –æ–±—â–∏—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ —Ç–∏–ø–∞ "–∑–∞–Ω—è—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º" - –ø–∏—à–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ "—Å–¥–µ–ª–∞—Ç—å 15 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π"

–ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å:
- ${easy} –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á (1-2 –º–∏–Ω—É—Ç—ã –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ)
- ${standard} —Å—Ä–µ–¥–Ω–∏—Ö –∑–∞–¥–∞—á (5-15 –º–∏–Ω—É—Ç –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ)  
- ${hard} —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á (30+ –º–∏–Ω—É—Ç –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ)
- 1 –º–∞–≥–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É–¥–∞—á–∏/–≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤)

–ö–ê–¢–ï–ì–û–†–ò–ò –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏ –∑–∞–¥–∞—á–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π):

–ü–†–û–°–¢–´–ï –∑–∞–¥–∞—á–∏ (–≤—ã–±–µ—Ä–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π):
- –§–∏–∑–∏—á–µ—Å–∫–∏–µ: –≤—ã–ø–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã, –ø–æ—Ç—è–Ω—É—Ç—å—Å—è 30 —Å–µ–∫, —Å–¥–µ–ª–∞—Ç—å 10 –ø—Ä—ã–∂–∫–æ–≤, –∑–µ–≤–Ω—É—Ç—å 5 —Ä–∞–∑
- –ú–µ–Ω—Ç–∞–ª—å–Ω—ã–µ: –Ω–∞–∑–≤–∞—Ç—å 5 –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π, –ø–æ–º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å 2 –º–∏–Ω—É—Ç—ã, –≤—Å–ø–æ–º–Ω–∏—Ç—å –ø—Ä–∏—è—Ç–Ω–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ
- –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ: –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —Å–º–∞–π–ª–∏–∫, –ø—Ä–∏–¥—É–º–∞—Ç—å —Ä–∏—Ñ–º—É –∫ —Å–ª–æ–≤—É "–¥–µ–Ω—å", —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –∫—Ä–∞—Å–∏–≤–æ–µ
- –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ: —É–ª—ã–±–Ω—É—Ç—å—Å—è –Ω–µ–∑–Ω–∞–∫–æ–º—Ü—É, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥—Ä—É–≥—É, –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –∫–æ–≥–æ-—Ç–æ
- –ë—ã—Ç–æ–≤—ã–µ: –ø—Ä–æ—Ç–µ—Ä–µ—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω, –ø–æ–ª–∏—Ç—å —Ü–≤–µ—Ç–æ–∫, –∑–∞—Å—Ç–µ–ª–∏—Ç—å –∫—Ä–æ–≤–∞—Ç—å, –æ—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ

–°–†–ï–î–ù–ò–ï –∑–∞–¥–∞—á–∏ (–º–∏–∫—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π):
- –§–∏–∑–∏—á–µ—Å–∫–∏–µ: –ø—Ä–æ–≥—É–ª–∫–∞ 10 –º–∏–Ω—É—Ç, —Ä–∞—Å—Ç—è–∂–∫–∞, –ø–æ–¥–Ω—è—Ç—å—Å—è –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ, —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å –ø–æ–¥ –º—É–∑—ã–∫—É
- –ú–µ–Ω—Ç–∞–ª—å–Ω—ã–µ: –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç—å—é, –∏–∑—É—á–∏—Ç—å 10 –Ω–æ–≤—ã—Ö —Å–ª–æ–≤, —Ä–µ—à–∏—Ç—å –≥–æ–ª–æ–≤–æ–ª–æ–º–∫—É, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
- –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ: –ø—Ä–∏–¥—É–º–∞—Ç—å —Å—Ç–∏—à–æ–∫, –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –ø–æ—Ä—Ç—Ä–µ—Ç, —Å–æ—á–∏–Ω–∏—Ç—å –º–µ–ª–æ–¥–∏—é, —Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–ª–∞–∂
- –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ: –ø–æ–∑–≤–æ–Ω–∏—Ç—å –±–∞–±—É—à–∫–µ, –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤, –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–æ–π
- –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ: –Ω–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫ –≤ –æ–¥–Ω–æ–π –ø–∞–ø–∫–µ, —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤—Ç—Ä–∞, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–∏—Å—å–º–∞

–°–õ–û–ñ–ù–´–ï –∑–∞–¥–∞—á–∏ (–¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è):
- –ü—Ä–æ–µ–∫—Ç–Ω—ã–µ: –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤–∞–∂–Ω—É—é —á–∞—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞, —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω, –∏–∑—É—á–∏—Ç—å –Ω–æ–≤—É—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é
- –ö–∞—Ä—å–µ—Ä–Ω—ã–µ: –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—é–º–µ, –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø–∏—Ç—á, –∏–∑—É—á–∏—Ç—å —Ä—ã–Ω–æ–∫ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
- –õ–∏—á–Ω—ã–µ: —Å–æ—Å—Ç–∞–≤–∏—Ç—å –±—é–¥–∂–µ—Ç –Ω–∞ –º–µ—Å—è—Ü, –Ω–∞—á–∞—Ç—å –Ω–æ–≤–æ–µ —Ö–æ–±–±–∏, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
- –û–±—É—á–∞—é—â–∏–µ: –ø—Ä–æ–π—Ç–∏ —É—Ä–æ–∫ –∫—É—Ä—Å–∞, –æ—Å–≤–æ–∏—Ç—å –Ω–æ–≤—ã–π –Ω–∞–≤—ã–∫, –∏–∑—É—á–∏—Ç—å 50 –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤

–ú–ê–ì–ò–ß–ï–°–ö–ò–ï –∑–∞–¥–∞—á–∏ (—Å–ª—É—á–∞–π–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è):
- –ù–∞–π—Ç–∏ –¥–µ–Ω—å–≥–∏/–º–æ–Ω–µ—Ç–∫—É, –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫, –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å —Å—Ç–∞—Ä–æ–≥–æ –∑–Ω–∞–∫–æ–º–æ–≥–æ, —É—Å–ª—ã—à–∞—Ç—å –ª—é–±–∏–º—É—é –ø–µ—Å–Ω—é, —É–≤–∏–¥–µ—Ç—å –Ω–µ–æ–±—ã—á–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ, –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –æ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
- –ù–ò–ö–ê–ö–ò–• –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∏–ª–∏ –ø–æ—Ö–æ–∂–∏—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫!
- –ò–ó–ë–ï–ì–ê–ô –±–∞–Ω–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á - –±—É–¥—å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–º!
- –û–±–µ—Å–ø–µ—á—å –±–∞–ª–∞–Ω—Å –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –∏—Ç–æ–≥–æ–≤–æ–º —Å–ø–∏—Å–∫–µ
- –ó–∞–¥–∞—á–∏ –¥–æ–ª–∂–Ω—ã –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

–û—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –º–∞—Å—Å–∏–≤–∞:
[
  {"text": "–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏", "type": "easy"},
  {"text": "–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏", "type": "standard"},
  {"text": "–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏", "type": "hard"},
  {"text": "–¢–µ–∫—Å—Ç –º–∞–≥–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏", "type": "magic"}
]`;

    return prompt;
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –æ—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–µ–π –∑–∞–¥–∞—á
  validateAndCleanTasks(tasks, taskConfig) {
    if (!Array.isArray(tasks)) return this.getFallbackTasks(taskConfig);
    
    const uniqueTasks = [];
    const seenTexts = new Set();
    const { easy, standard, hard } = taskConfig;
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ —Ç–∏–ø–∞–º
    const tasksByType = {
      easy: tasks.filter(t => t.type === 'easy'),
      standard: tasks.filter(t => t.type === 'standard'), 
      hard: tasks.filter(t => t.type === 'hard'),
      magic: tasks.filter(t => t.type === 'magic')
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const addUniqueTask = (task) => {
      if (!task.text || !task.type) return false;
      
      // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      const normalizedText = task.text.toLowerCase()
        .replace(/[^\w\s]/g, '') // —É–±–∏—Ä–∞–µ–º –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
        .replace(/\s+/g, ' ')    // –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã
        .trim();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏ (–ø–æ—Ö–æ–∂–∏–π —Ç–µ–∫—Å—Ç)
      for (const seenText of seenTexts) {
        if (this.calculateSimilarity(normalizedText, seenText) > 0.7) {
          return false; // –°–ª–∏—à–∫–æ–º –ø–æ—Ö–æ–∂–∞—è –∑–∞–¥–∞—á–∞
        }
      }
      
      seenTexts.add(normalizedText);
      uniqueTasks.push(task);
      return true;
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ –ø–æ —Ç–∏–ø–∞–º
    tasksByType.easy.slice(0, easy).forEach(addUniqueTask);
    tasksByType.standard.slice(0, standard).forEach(addUniqueTask);  
    tasksByType.hard.slice(0, hard).forEach(addUniqueTask);
    tasksByType.magic.slice(0, 1).forEach(addUniqueTask);
    
    // –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–∞–¥–∞—á - –¥–æ–ø–æ–ª–Ω—è–µ–º –∏–∑ fallback
    const needed = easy + standard + hard + 1;
    if (uniqueTasks.length < needed) {
      const fallbackTasks = this.getFallbackTasks(taskConfig);
      
      for (let i = 0; i < fallbackTasks.length && uniqueTasks.length < needed; i++) {
        if (addUniqueTask(fallbackTasks[i])) {
          // –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞
        }
      }
    }
    
    return uniqueTasks;
  }
  
  // –í—ã—á–∏—Å–ª–∏—Ç—å —Å—Ö–æ–∂–µ—Å—Ç—å –¥–≤—É—Ö —Ç–µ–∫—Å—Ç–æ–≤ (0-1, –≥–¥–µ 1 = –∏–¥–µ–Ω—Ç–∏—á–Ω–æ)
  calculateSimilarity(text1, text2) {
    const words1 = text1.split(' ');
    const words2 = text2.split(' ');
    
    let commonWords = 0;
    const maxLength = Math.max(words1.length, words2.length);
    
    for (const word of words1) {
      if (words2.includes(word) && word.length > 2) { // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–ª–æ–≤–∞
        commonWords++;
      }
    }
    
    return commonWords / maxLength;
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ —Å —É–º–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –≤—ã–±–æ—Ä–∞
  getStaticTasks(taskConfig, user) {
    const tasks = [];
    
    // –ë–∞–∑–∞ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á (80 —ç–ª–µ–º–µ–Ω—Ç–æ–≤) - –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è 1-2 –º–∏–Ω—É—Ç—ã
    const easyTasks = [
      // –§–∏–∑–∏—á–µ—Å–∫–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è (20 –∑–∞–¥–∞—á)
      "–í—ã–ø–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã", "–°–¥–µ–ª–∞—Ç—å 5 –≥–ª—É–±–æ–∫–∏—Ö –≤–¥–æ—Ö–æ–≤", "–ü–æ—Ç—è–Ω—É—Ç—å—Å—è –Ω–∞ 30 —Å–µ–∫—É–Ω–¥", 
      "–°–¥–µ–ª–∞—Ç—å 10 –ø—Ä—ã–∂–∫–æ–≤ –Ω–∞ –º–µ—Å—Ç–µ", "–í—Å—Ç–∞—Ç—å –∏ —Å–µ—Å—Ç—å 5 —Ä–∞–∑", "–ü–æ–≤—Ä–∞—â–∞—Ç—å —à–µ–µ–π –∏ –ø–ª–µ—á–∞–º–∏", 
      "–°–∂–∞—Ç—å –∏ —Ä–∞–∑–∂–∞—Ç—å –∫—É–ª–∞–∫–∏ 10 —Ä–∞–∑", "–ü–æ—Ö–æ–¥–∏—Ç—å –ø–æ –∫–æ–º–Ω–∞—Ç–µ 2 –º–∏–Ω—É—Ç—ã", "–°–¥–µ–ª–∞—Ç—å 10 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π",
      "–ü–æ–∫–∞—á–∞—Ç—å –≥–æ–ª–æ–≤–æ–π –≤–ª–µ–≤–æ-–≤–ø—Ä–∞–≤–æ", "–ü–æ—Ç—Ä—è—Å—Ç–∏ —Ä—É–∫–∞–º–∏ –∏ –Ω–æ–≥–∞–º–∏", "–ó–µ–≤–Ω—É—Ç—å 5 —Ä–∞–∑ –ø–æ–¥—Ä—è–¥",
      "–°–¥–µ–ª–∞—Ç—å –ø–ª–∞–Ω–∫—É 30 —Å–µ–∫—É–Ω–¥", "–ü–æ–∫—Ä—É—Ç–∏—Ç—å –∫–∏—Å—Ç—è–º–∏ —Ä—É–∫", "–°–¥–µ–ª–∞—Ç—å 5 –æ—Ç–∂–∏–º–∞–Ω–∏–π –æ—Ç —Å—Ç–µ–Ω—ã",
      "–ü–æ–º–∞—Å—Å–∞–∂–∏—Ä–æ–≤–∞—Ç—å –≤–∏—Å–∫–∏", "–ü–æ—Ç–µ—Ä–µ—Ç—å –ª–∞–¥–æ–Ω–∏ –¥—Ä—É–≥ –æ –¥—Ä—É–≥–∞", "–°–¥–µ–ª–∞—Ç—å 3 –Ω–∞–∫–ª–æ–Ω–∞ –≤–ø–µ—Ä–µ–¥",
      "–ü–æ—Å—Ç–æ—è—Ç—å –Ω–∞ –æ–¥–Ω–æ–π –Ω–æ–≥–µ 30 —Å–µ–∫—É–Ω–¥", "–°–¥–µ–ª–∞—Ç—å –∫—Ä—É–≥–æ–≤—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –ø–ª–µ—á–∞–º–∏",
      
      // –ú–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (20 –∑–∞–¥–∞—á)
      "–ù–∞–∑–≤–∞—Ç—å 5 –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π", "–í—Å–ø–æ–º–Ω–∏—Ç—å —Ö–æ—Ä–æ—à–µ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–µ—Ç—Å—Ç–≤–∞", "–ü–æ–º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å 1 –º–∏–Ω—É—Ç—É",
      "–°–∫–∞–∑–∞—Ç—å —Å–µ–±–µ 3 –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∞", "–ü–æ–¥—É–º–∞—Ç—å –æ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏—Ö –ø–ª–∞–Ω–∞—Ö", "–í—Å–ø–æ–º–Ω–∏—Ç—å –ª—é–±–∏–º–æ–µ –º–µ—Å—Ç–æ",
      "–ü–æ—Å—á–∏—Ç–∞—Ç—å –æ—Ç 100 –¥–æ 1 —á–µ—Ä–µ–∑ 7", "–ù–∞–∑–≤–∞—Ç—å 10 –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ –±—É–∫–≤—É –°", "–í—Å–ø–æ–º–Ω–∏—Ç—å –ª—é–±–∏–º–æ–µ –±–ª—é–¥–æ",
      "–ü–æ–¥—É–º–∞—Ç—å –æ —Ç—Ä–µ—Ö —Ö–æ—Ä–æ—à–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö –≤—á–µ—Ä–∞", "–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥–Ω–æ–π", "–í—Å–ø–æ–º–Ω–∏—Ç—å —Å–º–µ—à–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é",
      "–ù–∞–∑–≤–∞—Ç—å 5 —Ü–≤–µ—Ç–æ–≤ —Ä–∞–¥—É–≥–∏", "–ü–æ–¥—É–º–∞—Ç—å –æ –ª—é–±–∏–º–æ–º —Ñ–∏–ª—å–º–µ", "–í—Å–ø–æ–º–Ω–∏—Ç—å —à–∫–æ–ª—å–Ω–æ–≥–æ –¥—Ä—É–≥–∞",
      "–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±—è —á–µ—Ä–µ–∑ 5 –ª–µ—Ç", "–ü–æ–¥—É–º–∞—Ç—å –æ–± –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∫–Ω–∏–≥–µ", "–í—Å–ø–æ–º–Ω–∏—Ç—å –ø—Ä–∏—è—Ç–Ω—ã–π –∑–∞–ø–∞—Ö",
      "–ù–∞–∑–≤–∞—Ç—å 3 —Å–≤–æ–∏—Ö —Å–∏–ª—å–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤–∞", "–ü–æ–¥—É–º–∞—Ç—å –æ –º–µ—á—Ç–µ",
      
      // –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è (15 –∑–∞–¥–∞—á)
      "–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å —Å–º–∞–π–ª–∏–∫ –Ω–∞ –±—É–º–∞–≥–µ", "–°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –∫—Ä–∞—Å–∏–≤–æ–µ", "–ü—Ä–∏–¥—É–º–∞—Ç—å —Ä–∏—Ñ–º—É –∫ —Å–≤–æ–µ–º—É –∏–º–µ–Ω–∏",
      "–ù–∞–ø–µ—Ç—å –ª—é–±–∏–º—É—é –º–µ–ª–æ–¥–∏—é", "–ù–∞–ø–∏—Å–∞—Ç—å –æ–¥–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ-–∏—Å—Ç–æ—Ä–∏—é", "–°–ª–æ–∂–∏—Ç—å –æ—Ä–∏–≥–∞–º–∏ –∂—É—Ä–∞–≤–ª–∏–∫–∞",
      "–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –¥–æ–º–∏–∫ —Å —Ç—Ä—É–±–æ–π", "–°–æ—á–∏–Ω–∏—Ç—å –¥–≤—É—Å—Ç–∏—à–∏–µ –æ –ø–æ–≥–æ–¥–µ", "–ò–∑–æ–±—Ä–∞–∑–∏—Ç—å –∂–∏–≤–æ—Ç–Ω–æ–µ –∂–µ—Å—Ç–∞–º–∏",
      "–ù–∞–ø–∏—Å–∞—Ç—å –∏–º—è –∫—Ä–∞—Å–∏–≤—ã–º–∏ –±—É–∫–≤–∞–º–∏", "–ü—Ä–∏–¥—É–º–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–∞—Ñ–µ", "–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å —Å–µ—Ä–¥–µ—á–∫–æ",
      "–°–æ—á–∏–Ω–∏—Ç—å –∫–æ—Ä–æ—Ç–∫—É—é –ø–µ—Å–µ–Ω–∫—É", "–ò–∑–æ–±—Ä–∞–∑–∏—Ç—å —ç–º–æ—Ü–∏—é –º–∏–º–∏–∫–æ–π", "–ü—Ä–∏–¥—É–º–∞—Ç—å —Å—Ç–∏—à–æ–∫ –∏–∑ 2-—Ö —Å—Ç—Ä–æ—á–µ–∫",
      
      // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (10 –∑–∞–¥–∞—á)
      "–£–ª—ã–±–Ω—É—Ç—å—Å—è —Å–µ–±–µ –≤ –∑–µ—Ä–∫–∞–ª–µ", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–º–∞–π–ª–∏–∫ –±–ª–∏–∑–∫–æ–º—É", "–ü–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –∫–æ–≥–æ-—Ç–æ –º—ã—Å–ª–µ–Ω–Ω–æ",
      "–ü–æ–º–∞—Ö–∞—Ç—å —Ä—É–∫–æ–π –æ—Ç—Ä–∞–∂–µ–Ω–∏—é", "–°–∫–∞–∑–∞—Ç—å '–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ' –≤—Å–ª—É—Ö", "–ü–æ—Å–ª–∞—Ç—å –≤–æ–∑–¥—É—à–Ω—ã–π –ø–æ—Ü–µ–ª—É–π",
      "–û–±–Ω—è—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –∏–ª–∏ –ø–æ–¥—É—à–∫—É", "–°–∫–∞–∑–∞—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç —Ä–∞—Å—Ç–µ–Ω–∏—é", "–ü–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω",
      "–£–ª—ã–±–Ω—É—Ç—å—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –±–ª–∏–∑–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞",
      
      // –ë—ã—Ç–æ–≤—ã–µ –º–∏–Ω–∏-–¥–µ–ª–∞ (15 –∑–∞–¥–∞—á)
      "–ü—Ä–æ—Ç–µ—Ä–µ—Ç—å —ç–∫—Ä–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–ü–æ—Å—Ç–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –Ω–∞ –∑–∞—Ä—è–¥–∫—É", "–û—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –Ω–∞ 1 –º–∏–Ω—É—Ç—É",
      "–ó–∞—Å—Ç–µ–ª–∏—Ç—å –∫—Ä–æ–≤–∞—Ç—å", "–ü–æ–ª–∏—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ", "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —á–∞—Å—ã",
      "–í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏—è—Ç–Ω—É—é –º—É–∑—ã–∫—É", "–í—ã–∫–ª—é—á–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–π —Å–≤–µ—Ç", "–ü–æ–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω—É –≤–µ—â—å –Ω–∞ —Å—Ç–æ–ª–µ",
      "–ü–æ—á–∏—Å—Ç–∏—Ç—å –∑—É–±—ã", "–†–∞—Å—á–µ—Å–∞—Ç—å –≤–æ–ª–æ—Å—ã", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–≥–æ–¥—É –∑–∞ –æ–∫–Ω–æ–º",
      "–ü—Ä–æ—Ç–µ—Ä–µ—Ç—å –æ–¥–Ω—É –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å", "–°–ª–æ–∂–∏—Ç—å –æ–¥–Ω—É –≤–µ—â—å –Ω–∞ –º–µ—Å—Ç–æ", "–í—ã–±—Ä–æ—Å–∏—Ç—å –æ–¥–∏–Ω –Ω–µ–Ω—É–∂–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç"
    ];
    
    // –ë–∞–∑–∞ —Å—Ä–µ–¥–Ω–∏—Ö –∑–∞–¥–∞—á (60 —ç–ª–µ–º–µ–Ω—Ç–æ–≤) - –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ 5-15 –º–∏–Ω—É—Ç
    const standardTasks = [
      // –§–∏–∑–∏—á–µ—Å–∫–∏–µ (15 –∑–∞–¥–∞—á)
      "–°–¥–µ–ª–∞—Ç—å 15-–º–∏–Ω—É—Ç–Ω—É—é –∑–∞—Ä—è–¥–∫—É", "–ü—Ä–æ–≥—É–ª—è—Ç—å—Å—è 10 –º–∏–Ω—É—Ç –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ", "–°–¥–µ–ª–∞—Ç—å –ø–æ–ª–Ω—É—é —Ä–∞—Å—Ç—è–∂–∫—É", 
      "–ü–æ–¥–Ω—è—Ç—å—Å—è –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ 3 —ç—Ç–∞–∂–∞", "–ü–æ—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å –ø–æ–¥ 3 –ª—é–±–∏–º—ã–µ –ø–µ—Å–Ω–∏", "–°–¥–µ–ª–∞—Ç—å –ø–ª–∞–Ω–∫—É 2 –º–∏–Ω—É—Ç—ã",
      "–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–ø–ª–µ–∫—Å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è —Å–ø–∏–Ω—ã", "–°–¥–µ–ª–∞—Ç—å 50 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π", "–ü–æ–ø—Ä—ã–≥–∞—Ç—å –Ω–∞ —Å–∫–∞–∫–∞–ª–∫–µ 5 –º–∏–Ω—É—Ç",
      "–°–¥–µ–ª–∞—Ç—å –π–æ–≥–∞-–∫–æ–º–ø–ª–µ–∫—Å '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ–ª–Ω—Ü—É'", "–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—É—é –≥–∏–º–Ω–∞—Å—Ç–∏–∫—É", "–°–¥–µ–ª–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –≥–ª–∞–∑",
      "–ü–æ–∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ 15 –º–∏–Ω—É—Ç", "–ü–æ–ø–ª–∞–≤–∞—Ç—å –∏–ª–∏ –ø—Ä–∏–Ω—è—Ç—å –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π –¥—É—à", "–°–¥–µ–ª–∞—Ç—å –º–∞—Å—Å–∞–∂ —Ä—É–∫ –∏ –Ω–æ–≥",
      
      // –ú–µ–Ω—Ç–∞–ª—å–Ω—ã–µ/–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ (15 –∑–∞–¥–∞—á)
      "–ü—Ä–æ—á–∏—Ç–∞—Ç—å –æ–¥–Ω—É –≥–ª–∞–≤—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∫–Ω–∏–≥–∏", "–ò–∑—É—á–∏—Ç—å 20 –Ω–æ–≤—ã—Ö —Å–ª–æ–≤ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞", "–†–µ—à–∏—Ç—å 10 –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á",
      "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å TED-–≤–∏–¥–µ–æ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é —Ç–µ–º—É", "–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞", "–ò–∑—É—á–∏—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –≤ Wikipedia",
      "–ü—Ä–æ–π—Ç–∏ —É—Ä–æ–∫ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞", "–í—ã—É—á–∏—Ç—å —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ –Ω–∞–∏–∑—É—Å—Ç—å", "–†–µ—à–∏—Ç—å –∫—Ä–æ—Å—Å–≤–æ—Ä–¥ –∏–ª–∏ —Å—É–¥–æ–∫—É",
      "–ò–∑—É—á–∏—Ç—å –Ω–æ–≤—É—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é 15 –º–∏–Ω—É—Ç", "–ü–æ—á–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç—å–∏ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π —Ç–µ–º–µ", "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è",
      "–ò–∑—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è", "–ü–æ—á–∏—Ç–∞—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é –∏–∑–≤–µ—Å—Ç–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏", "–ò–∑—É—á–∏—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
      
      // –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ (15 –∑–∞–¥–∞—á)
      "–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –ø–µ–π–∑–∞–∂ –∏–∑ –æ–∫–Ω–∞ –∞–∫–≤–∞—Ä–µ–ª—å—é", "–ù–∞–ø–∏—Å–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–µ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ –æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏", "–°–æ—á–∏–Ω–∏—Ç—å –º–µ–ª–æ–¥–∏—é –Ω–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ", 
      "–°–æ–∑–¥–∞—Ç—å –∫–æ–ª–ª–∞–∂ –∏–∑ —Å—Ç–∞—Ä—ã—Ö –∂—É—Ä–Ω–∞–ª–æ–≤", "–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—Å–∫–∞–∑ –Ω–∞ 200 —Å–ª–æ–≤", "–°–¥–µ–ª–∞—Ç—å –ø–æ–¥–µ–ª–∫—É –∏–∑ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
      "–°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å 10 –∫—Ä–∞—Å–∏–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤", "–ó–∞–ø–∏—Å–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ-–ø–µ—Å–Ω—é", "–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –ø–æ—Ä—Ç—Ä–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞",
      "–°–¥–µ–ª–∞—Ç—å –æ—Ä–∏–≥–∞–º–∏ —Å–ª–æ–∂–Ω–æ–π —Ñ–∏–≥—É—Ä—ã", "–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ –≤ –±—É–¥—É—â–µ–µ", "–°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –æ —Å–≤–æ–µ–º —Ö–æ–±–±–∏",
      "–°–Ω—è—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ –æ –¥–Ω–µ", "–ù–∞–ø–∏—Å–∞—Ç—å –æ–±–∑–æ—Ä –ª—é–±–∏–º–æ–≥–æ —Ñ–∏–ª—å–º–∞", "–°–æ–∑–¥–∞—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
      
      // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ (15 –∑–∞–¥–∞—á)
      "–ü–æ–∑–≤–æ–Ω–∏—Ç—å —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É –∏ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å 15 –º–∏–Ω—É—Ç", "–ù–∞–ø–∏—Å–∞—Ç—å –¥–ª–∏–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ —Å—Ç–∞—Ä–æ–º—É –¥—Ä—É–≥—É", "–û—Å—Ç–∞–≤–∏—Ç—å 5 –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤",
      "–ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º", "–ü–æ–º–æ—á—å –∫–æ–º—É-—Ç–æ —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É", "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫ —Å –¥—Ä—É–∑—å—è–º–∏",
      "–ù–∞–ø–∏—Å–∞—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ —É—á–∏—Ç–µ–ª—é", "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö", "–ù–∞–π—Ç–∏ –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É",
      "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–º –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", "–ü–æ—Ö–≤–∞–ª–∏—Ç—å –∫–æ–ª–ª–µ–≥—É –∑–∞ —Ä–∞–±–æ—Ç—É", "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—É—é –ø—Ä–æ–≥—É–ª–∫—É",
      "–ü–æ–¥–∞—Ä–∏—Ç—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—Ü—É", "–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ —Ö–æ—Ä–æ—à–µ–º —Å–µ—Ä–≤–∏—Å–µ", "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –¥—Ä—É–≥–∞ –≤ —Ç—Ä—É–¥–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏"
    ];

    // –°–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ (–Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    const hardTasks = [];

    // –ë–∞–∑–∞ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á (20 —ç–ª–µ–º–µ–Ω—Ç–æ–≤) - —Å–æ–±—ã—Ç–∏—è –∑–∞–≤–∏—Å—è—â–∏–µ –æ—Ç —É–¥–∞—á–∏
    const magicTasks = [
      "–ù–∞–π—Ç–∏ –¥–µ–Ω—å–≥–∏ –∏–ª–∏ –º–æ–Ω–µ—Ç–∫—É –Ω–∞ –¥–æ—Ä–æ–≥–µ", "–ü–æ–ª—É—á–∏—Ç—å –∏—Å–∫—Ä–µ–Ω–Ω–∏–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –æ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞", 
      "–í—Å—Ç—Ä–µ—Ç–∏—Ç—å —Å—Ç–∞—Ä–æ–≥–æ –∑–Ω–∞–∫–æ–º–æ–≥–æ –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–º –º–µ—Å—Ç–µ", "–£—Å–ª—ã—à–∞—Ç—å –ª—é–±–∏–º—É—é –ø–µ—Å–Ω—é –ø–æ —Ä–∞–¥–∏–æ –∏–ª–∏ –≤ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ", 
      "–£–≤–∏–¥–µ—Ç—å —Ä–∞–¥—É–≥—É, –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –∏–ª–∏ –Ω–µ–æ–±—ã—á–Ω–æ–µ –ø—Ä–∏—Ä–æ–¥–Ω–æ–µ —è–≤–ª–µ–Ω–∏–µ", "–ü–æ–ª—É—á–∏—Ç—å —Ö–æ—Ä–æ—à–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—é",
      "–ù–∞–π—Ç–∏ –¥–∞–≤–Ω–æ –ø–æ—Ç–µ—Ä—è–Ω–Ω—É—é –≤–µ—â—å", "–ü–æ–ª—É—á–∏—Ç—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –∏–ª–∏ —Å—é—Ä–ø—Ä–∏–∑", "–£–≤–∏–¥–µ—Ç—å —Ä–µ–¥–∫–æ–µ –∏–ª–∏ –Ω–µ–æ–±—ã—á–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ",
      "–ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –∏ –ø—Ä–∏—è—Ç–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º", "–ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É –∏–ª–∏ –±–æ–Ω—É—Å –≤ –º–∞–≥–∞–∑–∏–Ω–µ", 
      "–í—ã–∏–≥—Ä–∞—Ç—å –ø—Ä–∏–∑ –≤ –ª–æ—Ç–µ—Ä–µ–µ –∏–ª–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ", "–ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–∫–æ—Ä—ã—Å—Ç–Ω—É—é –ø–æ–º–æ—â—å –æ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞", "–£–≤–∏–¥–µ—Ç—å –ø–∞–¥–∞—é—â—É—é –∑–≤–µ–∑–¥—É –∏–ª–∏ —Å–∞–º–æ–ª–µ—Ç –≤ –Ω–µ–±–µ",
      "–ü–æ–ª—É—á–∏—Ç—å –º–µ—Å—Ç–æ –≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ –∫–æ–≥–¥–∞ –æ—á–µ–Ω—å —É—Å—Ç–∞–ª", "–ü–æ–ø–∞—Å—Ç—å –Ω–∞ –∑–µ–ª–µ–Ω—ã–π —Å–≤–µ—Ç –Ω–∞ –≤—Å–µ—Ö –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∫–∞—Ö", "–í—Å—Ç—Ä–µ—Ç–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Ç–æ—á–Ω–æ —Ç–∞–∫–æ–π –∂–µ –æ–¥–µ–∂–¥–µ",
      "–ù–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—É—é –ø–∞—Ä–∫–æ–≤–∫—É –≤ –Ω—É–∂–Ω–æ–º –º–µ—Å—Ç–µ", "–ü–æ–ª—É—á–∏—Ç—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", "–£–≤–∏–¥–µ—Ç—å –¥–≤–æ–π–Ω—É—é —Ä–∞–¥—É–≥—É"
    ];
    
    // –£–º–Ω—ã–π –≤—ã–±–æ—Ä –∑–∞–¥–∞—á —Å –±–∞–ª–∞–Ω—Å–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    const selectedTasks = this.selectBalancedTasks(
      { easyTasks, standardTasks, hardTasks, magicTasks },
      taskConfig,
      user
    );
    
    return selectedTasks;
  }

  // –£–º–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –∑–∞–¥–∞—á —Å –±–∞–ª–∞–Ω—Å–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  selectBalancedTasks(taskPools, taskConfig, user) {
    const tasks = [];
    const userLevel = user.level || 1;
    
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –±–∞–ª–∞–Ω—Å–∞
    const categories = {
      physical: '—Ñ–∏–∑–∏—á–µ—Å–∫–∏',
      mental: '–º–µ–Ω—Ç–∞–ª—å–Ω—ã',
      creative: '—Ç–≤–æ—Ä—á–µ—Å–∫–∏',
      social: '—Å–æ—Ü–∏–∞–ª—å–Ω—ã',
      household: '–±—ã—Ç–æ–≤—ã'
    };
    
    // –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞—á–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º
    const easySelection = this.selectTasksWithBalance(
      taskPools.easyTasks, 
      taskConfig.easy, 
      'easy',
      categories,
      userLevel
    );
    tasks.push(...easySelection);
    
    // –í—ã–±–∏—Ä–∞–µ–º —Å—Ä–µ–¥–Ω–∏–µ –∑–∞–¥–∞—á–∏
    const standardSelection = this.selectTasksWithBalance(
      taskPools.standardTasks,
      taskConfig.standard,
      'standard', 
      categories,
      userLevel
    );
    tasks.push(...standardSelection);

    // –î–ª—è –¥–Ω–µ–π 11+ –¥–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–∑–∞–¥–∞—á—É –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–∫ –ø–µ—Ä–≤—É—é —Å–ª–æ–∂–Ω—É—é –∑–∞–¥–∞—á—É
    if (userLevel >= 11 && taskConfig.hard > 0) {
      const planningTask = {
        text: 'üìù –°–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑ 5-10 —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è',
        type: 'hard'
      };
      tasks.push(planningTask);
    }

    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ (–¥–ª—è –¥–Ω–µ–π 11+ —ç—Ç–æ —É–∂–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —Ç.–∫. hard tasks –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
    const hardSelection = this.selectTasksWithBalance(
      taskPools.hardTasks,
      taskConfig.hard - (userLevel >= 11 ? 1 : 0), // –í—ã—á–∏—Ç–∞–µ–º –º–µ—Ç–∞–∑–∞–¥–∞—á—É –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –¥–Ω–µ–π 11+
      'hard',
      categories,
      userLevel
    );
    tasks.push(...hardSelection);

    // –î–æ–±–∞–≤–ª—è–µ–º –º–∞–≥–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–Ω–µ–π 16+ (—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç —Å —á—É–¥–æ–º)
    if (userLevel >= 16 && taskConfig.magic) {
      const magicTask = this.selectRandomTask(taskPools.magicTasks, 'magic');
      if (magicTask) tasks.push(magicTask);
    }
    
    // –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∑–∞–¥–∞—á–∏
    const uniqueTasks = [];
    const seenTexts = new Set();
    
    for (const task of tasks) {
      const normalizedText = task.text.toLowerCase().trim();
      if (!seenTexts.has(normalizedText)) {
        seenTexts.add(normalizedText);
        uniqueTasks.push(task);
      }
    }
    
    // –ï—Å–ª–∏ –ø–æ—Å–ª–µ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–∞–¥–∞—á, –¥–æ–±–∞–≤–ª—è–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞
    // –ù–ï —É—á–∏—Ç—ã–≤–∞–µ–º hard tasks –µ—Å–ª–∏ –ø—É–ª –ø—É—Å—Ç–æ–π (–æ–Ω–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º)
    const totalNeeded = (taskConfig.easy || 0) + (taskConfig.standard || 0) +
      (taskPools.hardTasks.length > 0 ? (taskConfig.hard || 0) : 0) +
      (taskConfig.magic ? 1 : 0);
    if (uniqueTasks.length < totalNeeded) {
      // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ –æ–¥–∏–Ω –ø—É–ª
      const allAvailable = [
        ...taskPools.easyTasks.map(text => ({ text, type: 'easy' })),
        ...taskPools.standardTasks.map(text => ({ text, type: 'standard' })),
        ...taskPools.hardTasks.map(text => ({ text, type: 'hard' }))
      ];
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏
      for (const task of allAvailable) {
        if (uniqueTasks.length >= totalNeeded) break;
        
        const normalizedText = task.text.toLowerCase().trim();
        if (!seenTexts.has(normalizedText)) {
          seenTexts.add(normalizedText);
          uniqueTasks.push(task);
        }
      }
    }
    
    return uniqueTasks;
  }
  
  // –í—ã–±–æ—Ä –∑–∞–¥–∞—á —Å –±–∞–ª–∞–Ω—Å–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  selectTasksWithBalance(taskPool, count, type, categories, userLevel) {
    if (count === 0 || taskPool.length === 0) return [];
    
    const selectedTasks = [];
    const shuffledPool = [...taskPool].sort(() => Math.random() - 0.5);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏
    const tasksWithCategories = shuffledPool.map(task => ({
      text: task,
      type: type,
      category: this.detectTaskCategory(task, categories)
    }));
    
    // –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–±—Ä–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    const categoryKeys = Object.keys(categories);
    let categoryIndex = 0;
    
    for (let i = 0; i < count && selectedTasks.length < count; i++) {
      // –ò—â–µ–º –∑–∞–¥–∞—á—É –∏–∑ —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const targetCategory = categoryKeys[categoryIndex % categoryKeys.length];
      
      const taskFromCategory = tasksWithCategories.find(task => 
        task.category === targetCategory && 
        !selectedTasks.some(selected => selected.text === task.text)
      );
      
      if (taskFromCategory) {
        selectedTasks.push(taskFromCategory);
      } else {
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –±–µ—Ä–µ–º –ª—é–±—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é
        const anyAvailable = tasksWithCategories.find(task => 
          !selectedTasks.some(selected => selected.text === task.text)
        );
        
        if (anyAvailable) {
          selectedTasks.push(anyAvailable);
        }
      }
      
      categoryIndex++;
    }
    
    // –î–æ–ø–æ–ª–Ω—è–µ–º –¥–æ –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª—É—á–∞–π–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏
    while (selectedTasks.length < count && selectedTasks.length < tasksWithCategories.length) {
      const remaining = tasksWithCategories.filter(task => 
        !selectedTasks.some(selected => selected.text === task.text)
      );
      
      if (remaining.length > 0) {
        const randomTask = remaining[Math.floor(Math.random() * remaining.length)];
        selectedTasks.push(randomTask);
      } else {
        break;
      }
    }
    
    return selectedTasks.slice(0, count);
  }
  
  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  detectTaskCategory(taskText, categories) {
    const text = taskText.toLowerCase();
    
    // –§–∏–∑–∏—á–µ—Å–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    const physicalKeywords = [
      '–≤—ã–ø–∏—Ç—å', '—Å–¥–µ–ª–∞—Ç—å', '–ø–æ—Ç—è–Ω—É—Ç—å', '–ø—Ä—ã–∂', '–≤—Å—Ç–∞—Ç—å', '–ø–æ–≤—Ä–∞—â–∞—Ç—å', '—Å–∂–∞—Ç—å', '–ø–æ—Ö–æ–¥–∏—Ç—å', 
      '–ø—Ä–∏—Å–µ–¥', '–ø–ª–∞–Ω–∫', '–æ—Ç–∂–∏–º', '–º–∞—Å—Å–∞–∂', '–∑–∞—Ä—è–¥–∫', '–ø—Ä–æ–≥—É–ª', '—Ä–∞—Å—Ç—è–∂–∫', '—Ç–∞–Ω—Ü–µ–≤', '–±–µ–≥', '–≤–µ–ª–æ—Å–∏–ø–µ–¥', '–ø–ª–∞–≤–∞—Ç—å', '–¥—É—à'
    ];
    
    // –ú–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    const mentalKeywords = [
      '–Ω–∞–∑–≤–∞—Ç—å', '–≤—Å–ø–æ–º–Ω–∏—Ç—å', '–º–µ–¥–∏—Ç', '–∫–æ–º–ø–ª–∏–º–µ–Ω—Ç', '–ø–æ–¥—É–º–∞—Ç—å', '—Å—á–∏—Ç–∞—Ç—å',
      '–ø—Ä–æ—á–∏—Ç–∞—Ç—å', '–∏–∑—É—á–∏—Ç—å', '—Ä–µ—à–∏—Ç—å', '–≤–∏–¥–µ–æ', '–ø–ª–∞–Ω', '–∫—É—Ä—Å', '—Å—Ç–∏—Ö', '–∫—Ä–æ—Å—Å–≤–æ—Ä–¥', '—Å—É–¥–æ–∫—É', '—Å–ª–æ–≤', '–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç'
    ];
    
    // –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    const creativeKeywords = [
      '–Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å', '–Ω–∞–ø–∏—Å–∞—Ç—å', '—Å–æ—á–∏–Ω–∏—Ç—å', '—Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å', '–ø—Ä–∏–¥—É–º–∞—Ç—å', '–æ—Ä–∏–≥–∞–º–∏', 
      '–º–µ–ª–æ–¥–∏—è', '—Ä–∏—Ñ–º–∞', '–∫–æ–ª–ª–∞–∂', '—Ä–∞—Å—Å–∫–∞–∑', '–ø–æ–¥–µ–ª–∫–∞', '–∞–∫–≤–∞—Ä–µ–ª—å', '—Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ', '—Å–Ω—è—Ç—å', '–æ–±–∑–æ—Ä', '–ø–ª–µ–π–ª–∏—Å—Ç', '—Å–º–∞–π–ª–∏–∫', '—Ä–∏—Å–æ–≤–∞—Ç—å'
    ];
    
    // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    const socialKeywords = [
      '–ø–æ–∑–≤–æ–Ω–∏—Ç—å', '–Ω–∞–ø–∏—Å–∞—Ç—å', '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å', '–ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è', '–ø–æ–º–æ—á—å', '–æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å', 
      '–≤—Å—Ç—Ä–µ—á–∞', '–¥—Ä—É–≥', '–¥—Ä—É–∑—å—è', '–∫–æ–ª–ª–µ–≥–∞', '—Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫', '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', '–ø–∏—Å—å–º–æ', '—É–ª—ã–±–Ω—É—Ç—å—Å—è', '–æ–±–Ω—è—Ç—å', '–ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å'
    ];
    
    // –ë—ã—Ç–æ–≤—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    const householdKeywords = [
      '–ø—Ä–æ—Ç–µ—Ä–µ—Ç—å', '–ø–æ—Å—Ç–∞–≤–∏—Ç—å', '–æ—Ç–∫—Ä—ã—Ç—å', '–∑–∞—Å—Ç–µ–ª–∏—Ç—å', '–ø–æ–ª–∏—Ç—å', '–≤–∫–ª—é—á–∏—Ç—å', '–≤—ã–∫–ª—é—á–∏—Ç—å', '–ø–æ–ø—Ä–∞–≤–∏—Ç—å',
      '–ø–æ—á–∏—Å—Ç–∏—Ç—å', '—Ä–∞—Å—á–µ—Å–∞—Ç—å', '–ø–æ–≥–æ–¥–∞', '–¥–æ–º', '–∫–æ–º–Ω–∞—Ç–∞', '–ø–æ–∫—É–ø–∫–∏', '—É–±–æ—Ä–∫–∞', '–ø–æ—Ä—è–¥–æ–∫', '—Å–ª–æ–∂–∏—Ç—å', '–≤—ã–±—Ä–æ—Å–∏—Ç—å'
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    if (physicalKeywords.some(keyword => text.includes(keyword))) {
      return 'physical';
    }
    if (mentalKeywords.some(keyword => text.includes(keyword))) {
      return 'mental';
    }
    if (creativeKeywords.some(keyword => text.includes(keyword))) {
      return 'creative';
    }
    if (socialKeywords.some(keyword => text.includes(keyword))) {
      return 'social';
    }
    if (householdKeywords.some(keyword => text.includes(keyword))) {
      return 'household';
    }
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –º–µ–Ω—Ç–∞–ª—å–Ω–∞—è
    return 'mental';
  }
  
  // –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–π –∑–∞–¥–∞—á–∏
  selectRandomTask(taskPool, type) {
    if (taskPool.length === 0) return null;
    
    const randomIndex = Math.floor(Math.random() * taskPool.length);
    return {
      text: taskPool[randomIndex],
      type: type
    };
  }

  // –õ–µ–≥–∞—Å–∏ –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  getFallbackTasks(taskConfig) {
    console.log('üóíÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–µ–≥–∞—Å–∏ –º–µ—Ç–æ–¥ getFallbackTasks, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ getStaticTasks');
    return this.getStaticTasks(taskConfig, { level: 1 });
  }
}

module.exports = { AIService };
