// src/handlers/startHandler.js
const { Markup } = require('telegraf');
const { sendOrEditMessage, clearLastMessageId } = require('../utils/messageUtils');
const { g } = require('../utils/genderUtils');

// –ö—ç—à –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
const lastStartTimestamp = new Map();

const startHandler = async (ctx, userService) => {
  try {
    const telegramUser = ctx.from;
    const userId = telegramUser.id;
    const now = Date.now();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ /start –≤—ã–∑–≤–∞–Ω –Ω–µ–¥–∞–≤–Ω–æ (–≤ —Ç–µ—á–µ–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥)
    const lastStart = lastStartTimestamp.get(userId);
    if (lastStart && (now - lastStart) < 2000) {
      console.log('‚ö†Ô∏è Duplicate /start command ignored for user:', telegramUser.username || telegramUser.id);
      return;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å—Ç–∞—Ä—Ç–∞
    lastStartTimestamp.set(userId, now);
    
    console.log('üîç StartHandler called for:', telegramUser.username || telegramUser.id);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await userService.getOrCreateUser(telegramUser);
    console.log('üìä User data:', {
      id: user.id,
      telegram_id: user.telegram_id,
      level: user.level,
      onboarding_completed: user.onboarding_completed,
      current_streak: user.current_streak
    });
    
    if (!user.onboarding_completed) {
      // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –Ω–∞—á–∏–Ω–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
      console.log('üÜï Starting onboarding for new user');
      await sendWelcomeMessage(ctx);
    } else {
      // –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      console.log('üë§ Showing main menu for existing user');
      // –ü–æ–ª—É—á–∞–µ–º taskService –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
      const taskService = ctx.state.taskService || null;
      await sendMainMenu(ctx, user, false, taskService);
    }
  } catch (error) {
    console.error('Error in startHandler:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
};

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
const sendWelcomeMessage = async (ctx) => {
  const welcomeText = `üî• *–•–≤–∞—Ç–∏—Ç –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞!*

–ü—Ä–∏–≤–µ—Ç! –Ø FlowBot ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ—É—á –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.

*–ó–Ω–∞–∫–æ–º–∞—è —Å–∏—Ç—É–∞—Ü–∏—è?*
üò´ –ü–ª–∞–Ω–∏—Ä—É–µ—à—å –º–Ω–æ–≥–æ, –∞ –¥–µ–ª–∞–µ—à—å –º–∞–ª–æ
üò´ –ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∏—Ä—É–µ—à—å –≤–∞–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏
üò´ –ö –≤–µ—á–µ—Ä—É —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ –¥–µ–Ω—å –ø—Ä–æ—à–µ–ª –≤–ø—É—Å—Ç—É—é

*–í—Å–µ–≥–æ –∑–∞ 15 –¥–Ω–µ–π —Ç—ã –ø–æ–ª—É—á–∏—à—å:*
üöÄ –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—ã—à–µ –≤ 3-5 —Ä–∞–∑
‚ö° –ü–æ–ª–Ω–æ–µ –∏–∑–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏–∏
üéØ –ß–µ—Ç–∫–∏–π —Ñ–æ–∫—É—Å –Ω–∞ –≤–∞–∂–Ω–æ–º
üí™ –≠–Ω–µ—Ä–≥–∏—é –∏ –¥—Ä–∞–π–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
‚ú® –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ –∫–∞–∫ –Ω–æ–≤—É—é –ø—Ä–∏–≤—ã—á–∫—É

*–°–µ–∫—Ä–µ—Ç –≤ –Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–π –º–µ—Ç–æ–¥–∏–∫–µ Flow List:*
üìä –ò–∑—É—á–µ–Ω–∞ –Ω–∞ 10,000+ –ª—é–¥–µ–π
üß† –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –Ω–µ–π—Ä–æ–ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏
‚≠ê 94% —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–æ—Å—Ç–∏–≥–∞—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

*–¢–≤–æ–π –ø—É—Ç—å –∫ –ø–æ—Ç–æ–∫—É (–≤—Å–µ –Ω–∞—á–∏–Ω–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ):*
üìÖ –î–Ω–∏ 1-5: –ú—è–≥–∫–∏–π —Ä–∞–∑–≥–æ–Ω (–ø—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞—á–∏)
üìà –î–Ω–∏ 6-10: –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
üî• –î–Ω–∏ 11-15: –£—Å—Ç–æ–π—á–∏–≤—ã–π –ø–æ—Ç–æ–∫
üéØ –î–µ–Ω—å 16+: –¢—ã –≤ –ø–æ—Ç–æ–∫–µ! –ú–æ–∂–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é

*–ù–∞—á–Ω–µ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?*

üîí _–í—Å–µ —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ —É —Ç–µ–±—è –∏ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è. –ù–∏–∫–∞–∫–æ–π —Ä–µ–∫–ª–∞–º—ã, –Ω–∏–∫–∞–∫–æ–π –ø—Ä–æ–¥–∞–∂–∏ –¥–∞–Ω–Ω—ã—Ö._`;

  const keyboard = Markup.inlineKeyboard([
    [Markup.button.callback('üöÄ –ù–∞—á–∞—Ç—å!', 'start_onboarding')]
  ]);

  await sendOrEditMessage(ctx, welcomeText, keyboard);
};

// –®–∞–≥ 0: –í—ã–±–æ—Ä –ø–æ–ª–∞ (–¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –≥–µ–Ω–¥–µ—Ä–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π)
const sendGenderSelection = async (ctx) => {
  const genderText = `*–î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!*

–ö–∞–∫ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?

_–≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –±–æ—Ç –æ–±—â–∞–ª—Å—è —Å —Ç–æ–±–æ–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ üòä_`;

  const keyboard = Markup.inlineKeyboard([
    [
      Markup.button.callback('üë® –ü–∞—Ä–µ–Ω—å', 'gender_male'),
      Markup.button.callback('üë© –î–µ–≤—É—à–∫–∞', 'gender_female')
    ]
  ]);

  // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ
  if (ctx.callbackQuery) {
    await ctx.editMessageText(genderText, {
      parse_mode: 'Markdown',
      reply_markup: keyboard.reply_markup
    });
  } else {
    await sendOrEditMessage(ctx, genderText, keyboard);
  }
};

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const setUserGender = async (ctx, userService, gender) => {
  try {
    const userId = ctx.from.id;

    await userService.updateUser(userId, {
      gender: gender
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º user –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    if (ctx.state.user) {
      ctx.state.user.gender = gender;
    }

    console.log(`‚úÖ User gender set to ${gender} for user:`, userId);

    const responseText = gender === 'male' ? '–û—Ç–ª–∏—á–Ω–æ! üë®' : '–û—Ç–ª–∏—á–Ω–æ! üë©';
    await ctx.answerCbQuery(responseText);

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —É—Ä–æ–≤–Ω—è
    await sendOnboardingStep1(ctx);
  } catch (error) {
    console.error('Error setting user gender:', error);
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–ª–∞');
  }
};

// –®–∞–≥ 1: –í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è
const sendOnboardingStep1 = async (ctx) => {
  const levelText = `*–®–∞–≥ 1 –∏–∑ 3: –¢–≤–æ–π —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å*

–í—ã–±–µ—Ä–∏, —á—Ç–æ –ª—É—á—à–µ –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–µ–±—è —Å–µ–π—á–∞—Å:

_üí° –ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤—ã–±–æ—Ä–∞, –≤—Å–µ –Ω–∞—á–∏–Ω–∞—é—Ç —Å –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á ‚Äî —ç—Ç–æ –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É! –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —É—Å–ª–æ–∂–Ω–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–æ–π—Ç–∏ –≤ –ø–æ—Ç–æ–∫._`;

  const keyboard = Markup.inlineKeyboard([
    [
      Markup.button.callback('üò¥ –ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∏—Ä—É—é', 'level_beginner'),
      Markup.button.callback('üòê –î–µ–ª–∞—é —Ç—è–∂–µ–ª–æ', 'level_intermediate')
    ],
    [
      Markup.button.callback('üí™ –•–æ—á—É –±–æ–ª—å—à–µ', 'level_advanced')
    ]
  ]);

  await sendOrEditMessage(ctx, levelText, keyboard);
};

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const setUserLevel = async (ctx, userService, difficultyLevel) => {
  try {
    const userId = ctx.from.id;

    // –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞—á–∏–Ω–∞—é—Ç —Å —É—Ä–æ–≤–Ω—è 1 –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤—ã–±–æ—Ä–∞
    // –í—ã–±–æ—Ä (beginner/intermediate/advanced) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await userService.updateUser(userId, {
      level: 1  // –î–µ–Ω—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1
    });

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if (!ctx.session) ctx.session = {};
    ctx.session.difficultyChoice = difficultyLevel;

    console.log(`‚úÖ User level set to 1 (difficulty choice: ${difficultyLevel}) for user:`, userId);

    // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞
    let responseText = '';
    if (difficultyLevel === 'beginner') {
      responseText = '–û—Ç–ª–∏—á–Ω–æ! –ú—ã –Ω–∞—á–Ω–µ–º —Å —Å–∞–º—ã—Ö –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–æ–≤ üíö';
    } else if (difficultyLevel === 'intermediate') {
      responseText = '–ü–æ–Ω—è–ª! –ë—É–¥–µ–º –¥–≤–∏–≥–∞—Ç—å—Å—è —É–≤–µ—Ä–µ–Ω–Ω–æ üíõ';
    } else {
      responseText = '–ö—Ä—É—Ç–æ! –ì–æ—Ç–æ–≤—å—Å—è –∫ —á–µ–ª–ª–µ–Ω–¥–∂—É üí™';
    }

    await ctx.answerCbQuery(responseText);
    await sendOnboardingStep1_5(ctx, difficultyLevel);
  } catch (error) {
    console.error('Error setting user level:', error);
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —É—Ä–æ–≤–Ω—è');
  }
};

// –®–∞–≥ 1.5: –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
const sendOnboardingStep1_5 = async (ctx, difficultyLevel) => {
  const user = ctx.state.user;
  let supportText = '';

  if (difficultyLevel === 'beginner') {
    supportText = `üíö *–ü–æ–Ω–∏–º–∞—é —Ç–µ–±—è –∫–∞–∫ –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π!*

–ó–Ω–∞–µ—à—å, –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—è ‚Äî —ç—Ç–æ –Ω–µ –ª–µ–Ω—å –∏ –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å. –≠—Ç–æ –∑–∞—â–∏—Ç–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –º–æ–∑–≥–∞ –Ω–∞ –ø–µ—Ä–µ–≥—Ä—É–∑–∫—É –∏–ª–∏ —Å—Ç—Ä–∞—Ö –Ω–µ—É–¥–∞—á–∏.

*–•–æ—Ä–æ—à–∞—è –Ω–æ–≤–æ—Å—Ç—å:*
FlowBot —Å–æ–∑–¥–∞–Ω –∏–º–µ–Ω–Ω–æ –¥–ª—è –ª—é–¥–µ–π –∫–∞–∫ —Ç—ã! üéØ

–ú—ã –Ω–∞—á–Ω–µ–º —Å –ú–ò–ö–†–û-–∑–∞–¥–∞—á ‚Äî –Ω–∞—Å—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö, —á—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ —Å–¥–µ–ª–∞—Ç—å. –≠—Ç–æ –æ–±–º–∞–Ω–µ—Ç —Ç–≤–æ–π –º–æ–∑–≥ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç —Ü–µ–ø–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.

*–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å:*
‚ú® –õ–µ–≥–∫–æ—Å—Ç—å —Å—Ç–∞—Ä—Ç–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
üî• –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ –¥–µ–ª–∞—Ç—å –±–æ–ª—å—à–µ
üí™ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ

–¢—ã —É–∂–µ ${g(user, '—Å–¥–µ–ª–∞–ª', '—Å–¥–µ–ª–∞–ª–∞')} –ø–µ—Ä–≤—ã–π —à–∞–≥ ‚Äî ${g(user, '–∑–∞–ø—É—Å—Ç–∏–ª', '–∑–∞–ø—É—Å—Ç–∏–ª–∞')} –±–æ—Ç–∞. –î–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º? üöÄ`;
  } else if (difficultyLevel === 'intermediate') {
    supportText = `üíõ *–£–≤–∞–∂–∞—é —Ç–≤–æ—é —á–µ—Å—Ç–Ω–æ—Å—Ç—å!*

–¢–æ, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å –∑–∞–¥–∞—á–∏, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ —Ç—è–∂–µ–ª–æ ‚Äî –ø—Ä–∏–∑–Ω–∞–∫ –Ω–∞—Å—Ç–æ—è—â–µ–π —Å–∏–ª—ã –≤–æ–ª–∏! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ª—é–¥–µ–π –¥–∞–∂–µ –Ω–µ –Ω–∞—á–∏–Ω–∞—é—Ç.

*–ù–æ –≤–æ—Ç –≤ —á–µ–º —Å–µ–∫—Ä–µ—Ç:*
–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç—è–∂–µ–ª–æ–π üí°

FlowBot –Ω–∞—É—á–∏—Ç —Ç–≤–æ–π –º–æ–∑–≥ –≤—Ö–æ–¥–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ ‚Äî –∫–æ–≥–¥–∞ –∑–∞–¥–∞—á–∏ –¥–µ–ª–∞—é—Ç—Å—è –ª–µ–≥–∫–æ –∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º.

*–ß—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—Å—è:*
‚ö° –ó–∞–¥–∞—á–∏ —Å—Ç–∞–Ω—É—Ç –¥–∞–≤–∞—Ç—å—Å—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ
üéØ –ü–æ—è–≤–∏—Ç—Å—è —á–µ—Ç–∫–∏–π —Ñ–æ–∫—É—Å –∏ —ç–Ω–µ—Ä–≥–∏—è
üî• –¢—ã –±—É–¥–µ—à—å —É–¥–∏–≤–ª—è—Ç—å—Å—è: "–ù–µ—É–∂–µ–ª–∏ —ç—Ç–æ –±—ã–ª–æ —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ?"

–ì–æ—Ç–æ–≤ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏? üöÄ`;
  } else {
    supportText = `‚ù§Ô∏è *–í–∞—É! –ß—É–≤—Å—Ç–≤—É—é —Ç–≤–æ—é —ç–Ω–µ—Ä–≥–∏—é!*

–¢—ã –∏–∑ —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –±–æ–∏—Ç—Å—è –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö —Ü–µ–ª–µ–π. –≠—Ç–æ —Ä–µ–¥–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ! üî•

*–ò —è —Ç–µ–±—è –ø–æ–Ω–∏–º–∞—é:*
–ö–æ–≥–¥–∞ –µ—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª, —Ö–æ—á–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –µ–≥–æ –Ω–∞ 100%. –ù–µ —Ä–∞–∑–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –Ω–∞ –º–µ–ª–æ—á–∏.

FlowBot —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–∞–∫–∏—Ö –∫–∞–∫ —Ç—ã ‚Äî —á—Ç–æ–±—ã –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –∞–º–±–∏—Ü–∏–∏ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.

*–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å:*
üöÄ –ú–∞–∫—Å–∏–º—É–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
‚ö° –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –±–æ–ª—å—à–∏–º —Ü–µ–ª—è–º
üíé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–Ω–æ –≥–æ—Ä–¥–∏—Ç—å—Å—è

–î–∞–∂–µ —Å–∞–º—ã–µ –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–µ –≤–µ—Ä—à–∏–Ω—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞. –ì–æ—Ç–æ–≤? üéØ`;
  }

  const keyboard = Markup.inlineKeyboard([
    [Markup.button.callback('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°Ô∏è', 'continue_onboarding_step2')]
  ]);

  // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ
  if (ctx.callbackQuery) {
    await ctx.editMessageText(supportText, {
      parse_mode: 'Markdown',
      reply_markup: keyboard.reply_markup
    });
  } else {
    await sendOrEditMessage(ctx, supportText, keyboard);
  }
};

// –®–∞–≥ 2: –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö –∑–∞–¥–∞—á
const sendOnboardingStep2 = async (ctx) => {
  const timeText = `*–®–∞–≥ 2 –∏–∑ 3: –í—Ä–µ–º—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö –∑–∞–¥–∞—á*

–ö–æ–≥–¥–∞ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ –ø–æ–ª—É—á–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –Ω–∞ –¥–µ–Ω—å?`;

  const keyboard = Markup.inlineKeyboard([
    [
      Markup.button.callback('üåÖ 6:00', 'onboarding_morning_6'),
      Markup.button.callback('üåÖ 7:00', 'onboarding_morning_7'),
      Markup.button.callback('üåÖ 8:00', 'onboarding_morning_8')
    ],
    [
      Markup.button.callback('‚òÄÔ∏è 9:00', 'onboarding_morning_9'),
      Markup.button.callback('‚òÄÔ∏è 10:00', 'onboarding_morning_10'),
      Markup.button.callback('‚òÄÔ∏è 11:00', 'onboarding_morning_11')
    ]
  ]);

  // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ
  if (ctx.callbackQuery) {
    await ctx.editMessageText(timeText, {
      parse_mode: 'Markdown',
      reply_markup: keyboard.reply_markup
    });
  } else {
    await sendOrEditMessage(ctx, timeText, keyboard);
  }
};

// –®–∞–≥ 3: –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –≤–µ—á–µ—Ä–Ω–µ–π —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏
const sendOnboardingStep3 = async (ctx) => {
  const timeText = `*–®–∞–≥ 3 –∏–∑ 3: –í—Ä–µ–º—è –≤–µ—á–µ—Ä–Ω–µ–π —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏*

–ö–æ–≥–¥–∞ –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏ –¥–Ω—è?`;

  const keyboard = Markup.inlineKeyboard([
    [
      Markup.button.callback('üåÜ 19:00', 'onboarding_evening_19'),
      Markup.button.callback('üåÜ 20:00', 'onboarding_evening_20'),
      Markup.button.callback('üåÜ 21:00', 'onboarding_evening_21')
    ],
    [
      Markup.button.callback('üåô 22:00', 'onboarding_evening_22'),
      Markup.button.callback('üåô 23:00', 'onboarding_evening_23')
    ]
  ]);

  // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ
  if (ctx.callbackQuery) {
    await ctx.editMessageText(timeText, {
      parse_mode: 'Markdown',
      reply_markup: keyboard.reply_markup
    });
  } else {
    await sendOrEditMessage(ctx, timeText, keyboard);
  }
};

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
const completeOnboarding = async (ctx, userService, difficultyChoice = null) => {
  try {
    const userId = ctx.from.id;
    const user = ctx.state.user;

    await userService.updateUser(userId, {
      onboarding_completed: true
    });

    // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞
    let personalMessage = '';
    if (difficultyChoice === 'beginner') {
      personalMessage = `üíö *–¢—ã ${g(user, '–≤—ã–±—Ä–∞–ª', '–≤—ã–±—Ä–∞–ª–∞')} –ø—É—Ç—å –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ ‚Äî —ç—Ç–æ –º—É–¥—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ!*\n–ú—ã –Ω–∞—á–Ω–µ–º —Å —Å–∞–º—ã—Ö –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–æ–≤, —á—Ç–æ–±—ã —Ç—ã —É–≤–µ—Ä–µ–Ω–Ω–æ ${g(user, '–≤–æ—à–µ–ª', '–≤–æ—à–ª–∞')} –≤ —Ä–∏—Ç–º.\n\n`;
    } else if (difficultyChoice === 'intermediate') {
      personalMessage = `üíõ *–¢—ã ${g(user, '–≥–æ—Ç–æ–≤', '–≥–æ—Ç–æ–≤–∞')} –∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ–º—É –¥–≤–∏–∂–µ–Ω–∏—é –≤–ø–µ—Ä–µ–¥!*\n–¢–≤–æ—è –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –ø–æ–º–æ–∂–µ—Ç –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ª—é–±—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏.\n\n`;
    } else if (difficultyChoice === 'advanced') {
      personalMessage = `‚ù§Ô∏è *–¢—ã ${g(user, '–≤—ã–±—Ä–∞–ª', '–≤—ã–±—Ä–∞–ª–∞')} –ø—É—Ç—å –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö —Ü–µ–ª–µ–π!*\n–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∏ –¥—Ä–∞–π–≤ –ø—Ä–∏–≤–µ–¥—É—Ç –∫ –≤–ø–µ—á–∞—Ç–ª—è—é—â–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º.\n\n`;
    }

    const completionText = `üéâ *–û—Ç–ª–∏—á–Ω–æ! –¢—ã ${g(user, '–≥–æ—Ç–æ–≤', '–≥–æ—Ç–æ–≤–∞')} –Ω–∞—á–∞—Ç—å!*

${personalMessage}*–í–∞–∂–Ω–æ:* –í—Å–µ –Ω–∞—á–∏–Ω–∞—é—Ç —Å –î–Ω—è 1 –∏ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á. –≠—Ç–æ –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É Flow List! üîë

*–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*
üìÖ –ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
‚úÖ –í —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è ‚Äî –æ—Ç–º–µ—á–∞–µ—à—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
üåô –í–µ—á–µ—Ä–æ–º ‚Äî —Å–º–æ—Ç—Ä–∏—à—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø–æ–ª—É—á–∞–µ—à—å –º–æ—Ç–∏–≤–∞—Ü–∏—é

‚ö†Ô∏è *–í–ê–ñ–ù–û:* –°—Ç–∞—Ä–∞–π—Å—è –∑–∞–∫—Ä—ã–≤–∞—Ç—å –í–°–ï –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!
–≠—Ç–æ –∫–ª—é—á –∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –ø—Ä–∏–≤—ã—á–∫–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É.

*–¢–≤–æ–π –ø—É—Ç—å:*
‚Ä¢ –î–Ω–∏ 1-5: —Ä–∞–∑–≥–æ–Ω –Ω–∞ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á–∞—Ö
‚Ä¢ –î–Ω–∏ 6-10: –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å
‚Ä¢ –î–Ω–∏ 11-15: –≤—Ö–æ–¥–∏—à—å –≤ –ø–æ—Ç–æ–∫
‚Ä¢ –î–µ–Ω—å 16+: –ø—Ä–æ–¥–æ–ª–∂–∞–π –ø–æ –∂–µ–ª–∞–Ω–∏—é

–ì–æ—Ç–æ–≤? –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø–æ–ª—É—á–∏ –ø–µ—Ä–≤—ã–π Flow List! üöÄ

_/help ‚Äî –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å_`;

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
    const keyboard = Markup.inlineKeyboard([
      [
        Markup.button.callback('üìã –ù–∞—á–∞—Ç—å –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å', 'show_tasks')
      ],
      [
        Markup.button.callback('üìä –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ', 'show_help'),
        Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'show_main_menu')
      ]
    ]);

    await sendOrEditMessage(ctx, completionText, keyboard);
  } catch (error) {
    console.error('Error completing onboarding:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.');
  }
};

// –ü–æ–ª—É—á–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
const getMotivationalMessage = (percentage) => {
  if (percentage === 0) return 'üí™ –ù–∞—á–Ω–∏ —Å –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏!';
  if (percentage <= 30) return 'üî• –û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ!';
  if (percentage <= 60) return '‚ö° –¢—ã –≤ –æ–≥–Ω–µ! –ü—Ä–æ–¥–æ–ª–∂–∞–π!';
  if (percentage <= 90) return 'üöÄ –ü–æ—á—Ç–∏ —É —Ü–µ–ª–∏!';
  if (percentage < 100) return 'üíé –û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ!';
  return 'üéâ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –õ–µ–≥–µ–Ω–¥–∞!';
};

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const sendMainMenu = async (ctx, user, editMessage = false, taskService = null) => {
  // –î–µ–Ω—å –ø—Ä–æ–≥—Ä–∞–º–º—ã = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π –∏–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  let currentDay = user.level || 1; // fallback –Ω–∞ user.level

  // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π
  const userService = ctx.state.userService;
  if (userService) {
    try {
      const stats = await userService.getUserStats(user.telegram_id);
      if (stats && stats.totalDays !== undefined) {
        currentDay = stats.totalDays || 1; // –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏
      }
    } catch (error) {
      console.error('Error getting user stats for menu:', error);
    }
  }

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∏–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const streak = user.current_streak || 0;

  console.log(`üìä Showing menu - Day: ${currentDay} (active days), Streak: ${streak} for user: ${user.telegram_id}`);

  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–µ–Ω—å + —Å—Ç—Ä–∏–∫
  let progressLine;
  if (currentDay <= 15) {
    progressLine = `üìÖ –î–µ–Ω—å ${currentDay} –∏–∑ 15 ‚Ä¢ üî• –°—Ç—Ä–∏–∫: ${streak}`;
  } else {
    progressLine = `üìÖ –î–µ–Ω—å ${currentDay} (—Ç—ã –≤ –ø–æ—Ç–æ–∫–µ! üéâ) ‚Ä¢ üî• –°—Ç—Ä–∏–∫: ${streak}`;
  }

  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
  let todayProgress = '';
  let motivationalMsg = 'üí™ –ù–∞—á–Ω–∏ —Å –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏!';

  if (taskService) {
    try {
      const moment = require('moment-timezone');
      const today = moment().tz('Europe/Moscow').format('YYYY-MM-DD');
      const tasks = await taskService.getUserTasksForDate(user.id, today);

      if (tasks && tasks.length > 0) {
        const completed = tasks.filter(t => t.completed).length;
        const total = tasks.length;
        const percentage = Math.round((completed / total) * 100);

        todayProgress = `üìã –°–µ–≥–æ–¥–Ω—è: ${completed}/${total} –∑–∞–¥–∞—á ‚úÖ (${percentage}%)`;
        motivationalMsg = getMotivationalMessage(percentage);
      } else {
        todayProgress = 'üìã –ó–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã';
        motivationalMsg = 'üåÖ –°–æ–∑–¥–∞–π —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á!';
      }
    } catch (error) {
      console.error('Error getting today tasks:', error);
      todayProgress = 'üìã –ó–∞–¥–∞—á–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...';
    }
  }

  // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userName = user.first_name || user.username || '–¥—Ä—É–≥';

  const menuText = `üåü *–ü—Ä–∏–≤–µ—Ç, ${userName}!*

${progressLine}
${todayProgress}
${motivationalMsg}`;

  const keyboard = Markup.inlineKeyboard([
    [
      Markup.button.callback('üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', 'show_tasks'),
      Markup.button.callback('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'show_settings')
    ],
    [
      Markup.button.callback('üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', 'show_feedback')
    ]
  ]);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
  await sendOrEditMessage(ctx, menuText, keyboard);
};

// –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const resetProgress = async (ctx, userService) => {
  try {
    const confirmText = `‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ!*
    
–¢—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –∑–∞–Ω–æ–≤–æ?

–≠—Ç–æ —Å–±—Ä–æ—Å–∏—Ç:
‚Ä¢ –¢–≤–æ–π —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Å—Ç—Ä–∏–∫–∏
‚Ä¢ –í—Å–µ –∑–∞–¥–∞—á–∏

–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!`;

    const keyboard = Markup.inlineKeyboard([
      [
        Markup.button.callback('‚úÖ –î–∞, –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', 'confirm_reset'),
        Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_reset')
      ]
    ]);

    await sendOrEditMessage(ctx, confirmText, keyboard);
    await ctx.answerCbQuery();
  } catch (error) {
    console.error('Error in resetProgress:', error);
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞');
  }
};

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞
const confirmReset = async (ctx, userService, taskService = null) => {
  try {
    const userId = ctx.from.id;

    console.log('üîÑ Resetting user progress for:', userId);

    // –í–ê–ñ–ù–û: –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –í–°–ï –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (taskService) {
      console.log('üóëÔ∏è Deleting all user tasks...');
      await taskService.deleteAllUserTasks(userId);
      console.log('‚úÖ All tasks deleted');
    } else {
      console.warn('‚ö†Ô∏è taskService not provided - tasks will NOT be deleted!');
    }

    // –ü–æ–ª—É—á–∞–µ–º supabase —á–µ—Ä–µ–∑ userService
    const supabase = userService.supabase;

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üóëÔ∏è Deleting user statistics...');
    await supabase
      .from('daily_stats')
      .delete()
      .eq('telegram_id', userId);
    console.log('‚úÖ Statistics deleted');

    // –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üóëÔ∏è Deleting user streak...');
    await supabase
      .from('streaks')
      .delete()
      .eq('telegram_id', userId);
    console.log('‚úÖ Streak deleted');

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø—É—Å—Ç—É—é –∑–∞–ø–∏—Å—å —Å—Ç—Ä–∏–∫–∞
    console.log('‚ûï Creating new empty streak...');
    await supabase
      .from('streaks')
      .insert([{
        telegram_id: userId,
        current_streak: 0,
        longest_streak: 0,
        total_days: 0,
        created_at: new Date().toISOString()
      }]);
    console.log('‚úÖ New streak created');

    // –ó–∞—Ç–µ–º —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
    await userService.updateUser(userId, {
      level: 1,  // –î–µ–Ω—å 1
      onboarding_completed: false,  // –ü—Ä–æ–π—Ç–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –∑–∞–Ω–æ–≤–æ
      current_streak: 0  // –°–±—Ä–æ—Å —Å—Ç—Ä–∏–∫–∞
    });

    console.log('‚úÖ User reset completed');

    await ctx.answerCbQuery('–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω!');

    // –ù–∞—á–∏–Ω–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –∑–∞–Ω–æ–≤–æ
    await sendWelcomeMessage(ctx);
    await sendOnboardingStep1(ctx);
  } catch (error) {
    console.error('Error confirming reset:', error);
    await ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ');
  }
};

module.exports = {
  startHandler,
  sendGenderSelection,
  setUserGender,
  setUserLevel,
  sendOnboardingStep1,
  sendOnboardingStep1_5,
  sendOnboardingStep2,
  sendOnboardingStep3,
  completeOnboarding,
  sendMainMenu,
  resetProgress,
  confirmReset
};
