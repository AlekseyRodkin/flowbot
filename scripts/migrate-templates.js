// scripts/migrate-templates.js
require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// Initialize Supabase client
const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY
);

async function applyTemplatesMigration() {
  try {
    console.log('üîÑ –ü—Ä–∏–º–µ–Ω—è—é –º–∏–≥—Ä–∞—Ü–∏—é —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞–¥–∞—á...');
    
    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏
    const migrationPath = path.join(__dirname, '../database/migrations/006_task_templates.sql');
    const migrationSQL = fs.readFileSync(migrationPath, 'utf8');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º SQL –º–∏–≥—Ä–∞—Ü–∏—é
    const { data, error } = await supabase.rpc('exec_sql', {
      sql_query: migrationSQL
    });
    
    if (error) {
      // –ï—Å–ª–∏ RPC –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π SQL
      console.log('‚ö†Ô∏è RPC –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–∏–º–µ–Ω—è—é –º–∏–≥—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π SQL...');
      
      // –†–∞–∑–±–∏–≤–∞–µ–º SQL –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
      const sqlCommands = migrationSQL
        .split(';')
        .map(cmd => cmd.trim())
        .filter(cmd => cmd.length > 0 && !cmd.startsWith('--'));
      
      for (const command of sqlCommands) {
        if (command.length > 0) {
          try {
            console.log(`üìù –í—ã–ø–æ–ª–Ω—è—é: ${command.substring(0, 50)}...`);
            
            // –î–ª—è CREATE TABLE –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å
            if (command.startsWith('CREATE TABLE')) {
              await supabase.from('_dummy').select('*').limit(0); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
              console.log('‚ö†Ô∏è CREATE TABLE –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard');
              console.log(command);
            }
            // –î–ª—è INSERT –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            else if (command.startsWith('INSERT')) {
              console.log('‚ö†Ô∏è INSERT –∫–æ–º–∞–Ω–¥—ã –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard');
              console.log(command);
            }
            // –î–ª—è –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥ —Ç–æ–∂–µ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
            else {
              console.log('‚ö†Ô∏è –ö–æ–º–∞–Ω–¥—É –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard:');
              console.log(command);
            }
          } catch (cmdError) {
            console.log(`‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç): ${command.substring(0, 50)}...`);
          }
        }
      }
    } else {
      console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
    try {
      const { data: templates, error: templatesError } = await supabase
        .from('task_templates')
        .select('*')
        .limit(1);
        
      if (!templatesError) {
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ task_templates —Å–æ–∑–¥–∞–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞');
        
        const { data: templateTasks, error: templateTasksError } = await supabase
          .from('template_tasks')
          .select('*')
          .limit(1);
          
        if (!templateTasksError) {
          console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ template_tasks —Å–æ–∑–¥–∞–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞');
          console.log('üéâ –°–∏—Å—Ç–µ–º–∞ —à–∞–±–ª–æ–Ω–æ–≤ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
        } else {
          console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ template_tasks –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', templateTasksError.message);
        }
      } else {
        console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ task_templates –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', templatesError.message);
      }
    } catch (checkError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã:', checkError.message);
      console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä—É—á–Ω–æ–º—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é –º–∏–≥—Ä–∞—Ü–∏–∏:');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard');
      console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
      console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ database/migrations/006_task_templates.sql');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    console.log('\nüìã –†—É—á–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard');
    console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
    console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ database/migrations/006_task_templates.sql');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
applyTemplatesMigration().then(() => {
  console.log('üèÅ –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω');
  process.exit(0);
}).catch((error) => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});