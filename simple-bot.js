// –ü—Ä–æ—Å—Ç–æ–π –±–æ—Ç —Å polling –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ç—å—é
require('dotenv').config();
const { Telegraf } = require('telegraf');

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

console.log('üöÄ –ó–∞–ø—É—Å–∫ FlowList_Bot...\n');

// –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
bot.start((ctx) => {
  console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç', ctx.from.username || ctx.from.id);
  ctx.reply(
    'üéØ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FlowList Bot!*\n\n' +
    '–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–æ–π—Ç–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ –∑–∞ 15 –¥–Ω–µ–π.\n\n' +
    '*–ö–æ–º–∞–Ω–¥—ã:*\n' +
    '/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n' +
    '/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n' +
    '/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n\n' +
    'üí° _–ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ npm run dev_',
    { parse_mode: 'Markdown' }
  );
});

bot.help((ctx) => {
  console.log('üìö –ö–æ–º–∞–Ω–¥–∞ /help –æ—Ç', ctx.from.username || ctx.from.id);
  ctx.reply(
    '*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n' +
    '/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n' +
    '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n' +
    '/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞\n' +
    '/test - –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞',
    { parse_mode: 'Markdown' }
  );
});

bot.command('status', (ctx) => {
  console.log('üîç –ö–æ–º–∞–Ω–¥–∞ /status –æ—Ç', ctx.from.username || ctx.from.id);
  ctx.reply('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!\n\n' + 
    `–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU', {timeZone: 'Europe/Moscow'})}\n` +
    `–í–∞—à ID: ${ctx.from.id}\n` +
    `Username: @${ctx.from.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`
  );
});

bot.command('test', (ctx) => {
  console.log('üß™ –ö–æ–º–∞–Ω–¥–∞ /test –æ—Ç', ctx.from.username || ctx.from.id);
  ctx.reply('üß™ –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
bot.on('text', (ctx) => {
  console.log('üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç', ctx.from.username || ctx.from.id, ':', ctx.message.text);
  ctx.reply(
    `–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${ctx.message.text}"\n\n` +
    '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.'
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${ctx.updateType}:`, err);
  ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
});

// –ó–∞–ø—É—Å–∫ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º polling
bot.launch({
  webhook: undefined,
  allowedUpdates: ['message', 'callback_query']
})
.then(() => {
  console.log('‚úÖ FlowList_Bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
  console.log('üì± –û—Ç–∫—Ä–æ–π—Ç–µ Telegram: https://t.me/FlowList_Bot');
  console.log('üí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã');
  console.log('\n‚ÑπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n');
})
.catch((error) => {
  console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:', error.message);
  
  if (error.message.includes('409')) {
    console.log('\n‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–æ, –±–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω –≤ –¥—Ä—É–≥–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ.');
    console.log('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã node –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–Ω–æ–≤–æ.');
  } else if (error.message.includes('401')) {
    console.log('\n‚ö†Ô∏è  –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞.');
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ TELEGRAM_BOT_TOKEN –≤ —Ñ–∞–π–ª–µ .env');
  } else if (error.message.includes('ECONNRESET') || error.message.includes('ETIMEDOUT')) {
    console.log('\n‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é.');
    console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
    console.log('2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å VPN');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–∞');
  }
  
  process.exit(1);
});

// Graceful shutdown
process.once('SIGINT', () => {
  console.log('\n‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
  bot.stop('SIGINT');
});

process.once('SIGTERM', () => {
  console.log('\n‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...');
  bot.stop('SIGTERM');
});
