// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
require('dotenv').config();
const axios = require('axios');

async function checkBot() {
  const token = process.env.TELEGRAM_BOT_TOKEN;
  
  if (!token) {
    console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env');
    return;
  }
  
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞...');
  
  try {
    const response = await axios.get(`https://api.telegram.org/bot${token}/getMe`);
    
    if (response.data.ok) {
      const bot = response.data.result;
      console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π!');
      console.log('ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:');
      console.log(`   –ò–º—è: ${bot.first_name}`);
      console.log(`   Username: @${bot.username}`);
      console.log(`   ID: ${bot.id}`);
      console.log(`   Can join groups: ${bot.can_join_groups}`);
      console.log(`   Can read messages: ${bot.can_read_all_group_messages}`);
      console.log('');
      console.log('üì± –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞: https://t.me/' + bot.username);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞:', response.data.description);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞:');
    if (error.response && error.response.data) {
      console.error('   ', error.response.data.description);
      
      if (error.response.data.description.includes('Unauthorized')) {
        console.error('');
        console.error('‚ö†Ô∏è  –¢–æ–∫–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
        console.error('   1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ç–æ–∫–µ–Ω –æ—Ç @BotFather');
        console.error('   2. –ù–µ—Ç –ª–∏ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ —Ç–æ–∫–µ–Ω–∞');
      }
    } else {
      console.error('   ', error.message);
    }
  }
}

checkBot();
