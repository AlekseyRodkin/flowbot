-- –ú–∏–≥—Ä–∞—Ü–∏—è 005: –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã ID
-- –¶–µ–ª—å: —É–±—Ä–∞—Ç—å –ø—É—Ç–∞–Ω–∏—Ü—É –º–µ–∂–¥—É id –∏ telegram_id —Å —É—á–µ—Ç–æ–º —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î
-- –†–µ—à–µ–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å telegram_id –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á –≤–µ–∑–¥–µ

-- 1. –°–Ω–∞—á–∞–ª–∞ –≤—ã—è—Å–Ω—è–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã achievements
DO $$ 
DECLARE
    achievement_id_type text;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—è id –≤ —Ç–∞–±–ª–∏—Ü–µ achievements
    SELECT data_type INTO achievement_id_type 
    FROM information_schema.columns 
    WHERE table_name = 'achievements' AND column_name = 'id';
    
    RAISE NOTICE 'Achievement ID type: %', achievement_id_type;
    
    -- –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ achievements –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º —Å INTEGER
    IF achievement_id_type IS NULL THEN
        CREATE TABLE IF NOT EXISTS achievements (
            id SERIAL PRIMARY KEY,
            code VARCHAR(50) UNIQUE NOT NULL,
            name VARCHAR(255),
            description TEXT,
            icon VARCHAR(50),
            points INTEGER DEFAULT 10
        );
        
        -- –í—Å—Ç–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        INSERT INTO achievements (code, name, description, icon, points) VALUES
        ('first_task', '–ü–µ—Ä–≤—ã–π —à–∞–≥', '–í—ã–ø–æ–ª–Ω–∏–ª –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É', 'üéØ', 10),
        ('streak_3', '–†–∞–∑–≥–æ–Ω', '3 –¥–Ω—è –ø–æ–¥—Ä—è–¥', 'üî•', 20),
        ('streak_7', '–ù–µ–¥–µ–ª—è —Å–∏–ª—ã', '7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥', 'üí™', 50),
        ('tasks_100', '–¶–µ–Ω—Ç—É—Ä–∏–æ–Ω', '100 –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á', 'üíØ', 100),
        ('early_bird', '–ñ–∞–≤–æ—Ä–æ–Ω–æ–∫', '–í—ã–ø–æ–ª–Ω–∏–ª –∑–∞–¥–∞—á–∏ –¥–æ 7 —É—Ç—Ä–∞', 'üåÖ', 30);
        
        achievement_id_type := 'integer';
    END IF;
END $$;

-- 2. –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
DROP TABLE IF EXISTS users_temp CASCADE;
CREATE TABLE users_temp (
    telegram_id BIGINT PRIMARY KEY,
    username VARCHAR(255),
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    level INTEGER DEFAULT 1,
    subscription_type VARCHAR(50) DEFAULT 'free',
    subscription_end DATE,
    morning_hour INTEGER DEFAULT 8,
    evening_hour INTEGER DEFAULT 21,
    timezone VARCHAR(50) DEFAULT 'Europe/Moscow',
    language VARCHAR(10) DEFAULT 'ru',
    onboarding_completed BOOLEAN DEFAULT FALSE,
    preferences TEXT[],
    anti_patterns TEXT[],
    last_seen TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 3. –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã users (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
DO $$
BEGIN
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'users') THEN
        INSERT INTO users_temp (
            telegram_id, username, first_name, last_name, level, subscription_type,
            subscription_end, timezone, language, onboarding_completed, created_at, updated_at
        )
        SELECT 
            telegram_id, username, first_name, last_name, 
            COALESCE(level, 1), COALESCE(subscription_type, 'free'),
            subscription_end, COALESCE(timezone, 'Europe/Moscow'), 
            COALESCE(language, 'ru'), COALESCE(onboarding_completed, false),
            created_at, updated_at
        FROM users
        WHERE telegram_id IS NOT NULL
        ON CONFLICT (telegram_id) DO NOTHING;
    END IF;
END $$;

-- 4. –°–æ–∑–¥–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
DROP TABLE IF EXISTS tasks_temp CASCADE;
CREATE TABLE tasks_temp (
    id SERIAL PRIMARY KEY,
    telegram_id BIGINT REFERENCES users_temp(telegram_id) ON DELETE CASCADE,
    date DATE NOT NULL,
    task_text TEXT NOT NULL,
    task_type VARCHAR(50),
    position INTEGER,
    completed BOOLEAN DEFAULT FALSE,
    completed_at TIMESTAMP,
    skipped BOOLEAN DEFAULT FALSE,
    ai_generated BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS daily_stats_temp CASCADE;
CREATE TABLE daily_stats_temp (
    id SERIAL PRIMARY KEY,
    telegram_id BIGINT REFERENCES users_temp(telegram_id) ON DELETE CASCADE,
    date DATE NOT NULL,
    total_tasks INTEGER DEFAULT 0,
    completed_tasks INTEGER DEFAULT 0,
    easy_completed INTEGER DEFAULT 0,
    standard_completed INTEGER DEFAULT 0,
    hard_completed INTEGER DEFAULT 0,
    magic_completed BOOLEAN DEFAULT FALSE,
    flow_score INTEGER DEFAULT 0,
    productivity_index FLOAT,
    notes TEXT,
    mood VARCHAR(50),
    created_at TIMESTAMP DEFAULT NOW(),
    UNIQUE(telegram_id, date)
);

DROP TABLE IF EXISTS streaks_temp CASCADE;
CREATE TABLE streaks_temp (
    id SERIAL PRIMARY KEY,
    telegram_id BIGINT REFERENCES users_temp(telegram_id) ON DELETE CASCADE,
    current_streak INTEGER DEFAULT 0,
    longest_streak INTEGER DEFAULT 0,
    total_days INTEGER DEFAULT 0,
    last_completed_date DATE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

DROP TABLE IF EXISTS reflections_temp CASCADE;
CREATE TABLE reflections_temp (
    id SERIAL PRIMARY KEY,
    telegram_id BIGINT REFERENCES users_temp(telegram_id) ON DELETE CASCADE,
    date DATE NOT NULL,
    what_worked TEXT,
    what_didnt TEXT,
    tomorrow_focus TEXT,
    ai_insights TEXT,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 5. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–∏–ø–æ–º
-- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø achievement_id –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü—ã achievements
DO $$
DECLARE
    achievement_id_type text;
    fkey_type text;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—è id –≤ —Ç–∞–±–ª–∏—Ü–µ achievements
    SELECT data_type INTO achievement_id_type 
    FROM information_schema.columns 
    WHERE table_name = 'achievements' AND column_name = 'id';
    
    -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–ª—è foreign key
    IF achievement_id_type = 'uuid' THEN
        fkey_type := 'UUID';
    ELSE
        fkey_type := 'INTEGER';
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–∏–ø–æ–º
    EXECUTE format('
        DROP TABLE IF EXISTS user_achievements_temp CASCADE;
        CREATE TABLE user_achievements_temp (
            telegram_id BIGINT REFERENCES users_temp(telegram_id) ON DELETE CASCADE,
            achievement_id %s REFERENCES achievements(id) ON DELETE CASCADE,
            unlocked_at TIMESTAMP DEFAULT NOW(),
            PRIMARY KEY (telegram_id, achievement_id)
        )', fkey_type);
END $$;

-- 6. –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä—ã—Ö —Ç–∞–±–ª–∏—Ü (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
DO $$
BEGIN
    -- –ú–∏–≥—Ä–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'tasks') THEN
        INSERT INTO tasks_temp (
            telegram_id, date, task_text, task_type, position, completed, 
            completed_at, skipped, ai_generated, created_at
        )
        SELECT 
            u.telegram_id, t.date, t.task_text, t.task_type, t.position, 
            t.completed, t.completed_at, t.skipped, t.ai_generated, t.created_at
        FROM tasks t
        JOIN users u ON t.user_id = u.id
        WHERE u.telegram_id IS NOT NULL;
    END IF;
    
    -- –ú–∏–≥—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'daily_stats') THEN
        INSERT INTO daily_stats_temp (
            telegram_id, date, total_tasks, completed_tasks, easy_completed,
            standard_completed, hard_completed, magic_completed, flow_score,
            productivity_index, notes, mood, created_at
        )
        SELECT 
            u.telegram_id, d.date, d.total_tasks, d.completed_tasks, d.easy_completed,
            d.standard_completed, d.hard_completed, d.magic_completed, d.flow_score,
            d.productivity_index, d.notes, d.mood, d.created_at
        FROM daily_stats d
        JOIN users u ON d.user_id = u.id
        WHERE u.telegram_id IS NOT NULL
        ON CONFLICT (telegram_id, date) DO NOTHING;
    END IF;
    
    -- –ú–∏–≥—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–∏–∫–∏
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'streaks') THEN
        INSERT INTO streaks_temp (
            telegram_id, current_streak, longest_streak, total_days,
            last_completed_date, created_at, updated_at
        )
        SELECT 
            u.telegram_id, s.current_streak, s.longest_streak, s.total_days,
            s.last_completed_date, s.created_at, s.updated_at
        FROM streaks s
        JOIN users u ON s.user_id = u.id
        WHERE u.telegram_id IS NOT NULL;
    END IF;
    
    -- –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'user_achievements') THEN
        INSERT INTO user_achievements_temp (telegram_id, achievement_id, unlocked_at)
        SELECT 
            u.telegram_id, ua.achievement_id, ua.unlocked_at
        FROM user_achievements ua
        JOIN users u ON ua.user_id = u.id
        WHERE u.telegram_id IS NOT NULL
        ON CONFLICT (telegram_id, achievement_id) DO NOTHING;
    END IF;
    
    -- –ú–∏–≥—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'reflections') THEN
        INSERT INTO reflections_temp (
            telegram_id, date, what_worked, what_didnt, tomorrow_focus,
            ai_insights, created_at
        )
        SELECT 
            u.telegram_id, r.date, r.what_worked, r.what_didnt, r.tomorrow_focus,
            r.ai_insights, r.created_at
        FROM reflections r
        JOIN users u ON r.user_id = u.id
        WHERE u.telegram_id IS NOT NULL;
    END IF;
END $$;

-- 7. –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
CREATE TABLE IF NOT EXISTS referrals (
    id SERIAL PRIMARY KEY,
    referrer_telegram_id BIGINT REFERENCES users_temp(telegram_id) ON DELETE CASCADE,
    referred_telegram_id BIGINT REFERENCES users_temp(telegram_id) ON DELETE CASCADE,
    referral_code VARCHAR(20) UNIQUE NOT NULL,
    status VARCHAR(20) DEFAULT 'pending', -- pending, active, completed
    reward_given BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT NOW(),
    activated_at TIMESTAMP,
    UNIQUE(referred_telegram_id)
);

-- 8. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ
DO $$
BEGIN
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    DROP TABLE IF EXISTS user_achievements CASCADE;
    DROP TABLE IF EXISTS reflections CASCADE;
    DROP TABLE IF EXISTS daily_stats CASCADE;
    DROP TABLE IF EXISTS streaks CASCADE;
    DROP TABLE IF EXISTS tasks CASCADE;
    DROP TABLE IF EXISTS users CASCADE;
    
    -- –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    ALTER TABLE users_temp RENAME TO users;
    ALTER TABLE tasks_temp RENAME TO tasks;
    ALTER TABLE daily_stats_temp RENAME TO daily_stats;
    ALTER TABLE streaks_temp RENAME TO streaks;
    ALTER TABLE user_achievements_temp RENAME TO user_achievements;
    ALTER TABLE reflections_temp RENAME TO reflections;
END $$;

-- 9. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
CREATE INDEX IF NOT EXISTS idx_tasks_telegram_date ON tasks(telegram_id, date);
CREATE INDEX IF NOT EXISTS idx_tasks_date ON tasks(date);
CREATE INDEX IF NOT EXISTS idx_daily_stats_telegram_date ON daily_stats(telegram_id, date);
CREATE INDEX IF NOT EXISTS idx_streaks_telegram_id ON streaks(telegram_id);
CREATE INDEX IF NOT EXISTS idx_user_achievements_telegram_id ON user_achievements(telegram_id);
CREATE INDEX IF NOT EXISTS idx_reflections_telegram_date ON reflections(telegram_id, date);
CREATE INDEX IF NOT EXISTS idx_referrals_code ON referrals(referral_code);
CREATE INDEX IF NOT EXISTS idx_referrals_referrer ON referrals(referrer_telegram_id);

-- 10. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
COMMENT ON TABLE users IS '–û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, telegram_id - –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á';
COMMENT ON TABLE tasks IS '–ó–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–≤—è–∑—å —á–µ—Ä–µ–∑ telegram_id';
COMMENT ON TABLE daily_stats IS '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, —Å–≤—è–∑—å —á–µ—Ä–µ–∑ telegram_id';
COMMENT ON TABLE streaks IS '–°—Ç—Ä–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–≤—è–∑—å —á–µ—Ä–µ–∑ telegram_id';

-- 11. –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
DO $$
DECLARE
    users_count integer;
    tasks_count integer;
    achievements_count integer;
BEGIN
    SELECT COUNT(*) INTO users_count FROM users;
    SELECT COUNT(*) INTO tasks_count FROM tasks;
    SELECT COUNT(*) INTO achievements_count FROM achievements;
    
    RAISE NOTICE '‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!';
    RAISE NOTICE 'üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: %', users_count;
    RAISE NOTICE 'üìã –ó–∞–¥–∞—á: %', tasks_count;
    RAISE NOTICE 'üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–π: %', achievements_count;
    RAISE NOTICE 'üéØ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç telegram_id –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á';
END $$;